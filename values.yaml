# Default values for geth-plex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ethereum/client-go
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

args:
  - --mainnet
  - --datadir=/data
  - --port=30303
  - --http
  - --http.addr=0.0.0.0
  - --http.port=8545
  - --http.api=eth,net,web3
  - --http.corsdomain=*
  - --authrpc.addr=0.0.0.0
  - --authrpc.port=8551
  - --authrpc.vhosts=*
  - --authrpc.jwtsecret=/jwt/jwt.hex
  - --metrics
  - --metrics.addr=0.0.0.0
  - --metrics.port=6060

env:
  - name: GETH_PORT
    value: "30303"            # P2P port â†’ integer only
  - name: GETH_HTTP_PORT
    value: "8545"             # JSON-RPC
  - name: GETH_AUTHRPC_PORT
    value: "8551"             # Engine API port

    
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    - name: engine
      port: 8551
      targetPort: 8551
    - name: http-rpc
      port: 8545
      targetPort: 8545
    - name: metrics
      port: 6060
      targetPort: 6060

containerPorts:
  - name: engine
    containerPort: 8551
    protocol: TCP
  - name: http-rpc
    containerPort: 8545
    protocol: TCP
  - name: metrics
    containerPort: 6060
    protocol: TCP

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 8545
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: 8545
  initialDelaySeconds: 10
  periodSeconds: 5

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# PVC for geth data persistence
persistence:
  enabled: true
  size: 20Gi
  storageClass: # use default
  accessModes:
    - ReadWriteOnce
  mountPath: /data
  name: geth-data

# Additional volumes on the output Deployment definition.
volumeMounts:
  - name: jwt
    mountPath: /jwt
    readOnly: true
  - name: geth-data
    mountPath: /data

volumes:
  - name: jwt
    secret:
      secretName: geth-jwt
      items:
        - key: jwt.hex
          path: jwt.hex

nodeSelector: {}

tolerations: []

affinity: {}
